'''В целом команда sort() использует способ "Timsort", 
который является одним из самых эффективных, поэтому является "стандартым" для Python.
Если задача без подвоха и необходимо отсортировать список "самостоятельно", 
то условие не подразумевает конкретные размеры массива,
поэтому мною решено было использовать эффективную "в среднем" для большого объема данных.

Выбранный алгоритм называется сортировка слиянием.
Заданым же кретериям она соответствует 
т.к. скорость не падает от получения "плохих" данных,
а также ей не нужны дополнительные улучшения для избежания,например переполнения стека.
'''
def merge_sort(array):
    if len(array) == 1 or len(array) == 0:
        return array
    l = merge_sort(array[:len(array) // 2])
    r = merge_sort(array[len(array) // 2:]) 
    i = j = k = 0
    Finish = [0] * (len(l) + len(r))
    while i < len(l) and j < len(r):
        if l[i] <= r[j]:
            Finish[k] = l[i]
            i += 1
        else:
            Finish[k] = r[j]
            j += 1
        k += 1
    while i < len(l):
        Finish[k] = l[i]
        i += 1
        k += 1
    while j < len(r):
        Finish[k] = r[j]
        j += 1
        k += 1
    for i in range(len(array)):
        array[i] = Finish[i]
    return array
